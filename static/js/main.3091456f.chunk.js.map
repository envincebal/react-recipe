{"version":3,"sources":["utils/api.js","components/Search.jsx","components/CheckBoxes.jsx","components/Recipe.jsx","components/RecipeList.jsx","components/App.jsx","index.jsx"],"names":["apiKey","module","exports","getRecipe","searchTerm","apiURL","fetch","method","headers","filteredRecipes","filters","filterTerm","forEach","filter","Search","props","submit","change","onSubmit","className","type","placeholder","value","onChange","CheckBoxes","click","htmlFor","onClick","Recipe","recipe","key","id","src","image","alt","href","url","rel","target","label","totalTime","Math","round","calories","yield","healthLabels","map","ingredientLines","ingredient","RecipeList","recipesList","response","App","handleChange","e","setState","handleRecipes","state","api","then","res","json","data","results","hits","error","item","prevState","recipes","handleFilteredRecipes","checkboxes","handleSubmit","preventDefault","length","isChecked","document","getElementsByClassName","i","checked","push","this","style","color","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3091456f.chunk.js","sourcesContent":["const apiID = `a23e2e90`;\r\nconst apiKey = `6220bdba80c64c71f7674f546eef3872`;\r\nconst proxyUrl = `https://cors.bridged.cc/`;\r\nmodule.exports = {\r\n  getRecipe(searchTerm) {\r\n\r\n    const apiURL = `${proxyUrl}https://api.edamam.com/search?q=${searchTerm}&app_id=${apiID}&app_key=${\r\n  apiKey}&from=0&to=20`;\r\n\r\n    const response = fetch(apiURL, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    return response;\r\n  },\r\n  filteredRecipes(searchTerm, filters) {\r\n    let filterTerm = \"\";\r\n\r\n    filters.forEach(filter => {\r\n      filterTerm += `&diet=${filter}`\r\n    });\r\n\r\n    const apiURL = `${proxyUrl}https://api.edamam.com/search?q=${searchTerm}&app_id=${apiID}&app_key=${\r\n  apiKey}&from=0&to=20${filterTerm}`;\r\n\r\n    const response = fetch(apiURL, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    return response;\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Search = props => {\r\n  const {submit, change} = props;\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <div className=\"controls\">\r\n        <input className=\"input-field\" type=\"text\" placeholder=\"Enter Ingredients\" value={props.value} onChange={change} />\r\n        <button className=\"search-button\">Search</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst CheckBoxes = props => {\r\n  const { click } = props;\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"checkboxes\" className=\"checkbox\" >\r\n        <input type=\"checkbox\" className=\"checkboxes\" value=\"balanced\"\r\n          onClick={click} />Balanced\r\n      </label>\r\n\r\n      <label htmlFor=\"checkboxes\" className=\"checkbox\" >\r\n        <input type=\"checkbox\" className=\"checkboxes\" value=\"high-protein\" onClick={click} />High-Protein\r\n      </label>\r\n\r\n      <label htmlFor=\"checkboxes\" className=\"checkbox\" >\r\n        <input type=\"checkbox\" className=\"checkboxes\" value=\"low-fat\"\r\n          onClick={click} />Low-Fat\r\n      </label>\r\n\r\n      <label htmlFor=\"checkboxes\" className=\"checkbox\" >\r\n        <input type=\"checkbox\" className=\"checkboxes\" value=\"low-carb\"\r\n          onClick={click} />Low-Carb\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBoxes;","import React from 'react';\r\n\r\nconst Recipe = props => {\r\n  const {recipe} = props;\r\n  return (\r\n    <div key={recipe.id} className=\"recipe\">\r\n      <div className=\"img-container\">\r\n        <img className=\"recipe-img\" src={recipe.image} alt=\"\" />\r\n        <a href={recipe.url} rel='noreferrer noopener' target=\"_blank\">\r\n          <h3>{recipe.label}</h3>\r\n        </a>\r\n      </div>\r\n      <div className=\"recipe-content\">\r\n        <div className=\"recipe-div-1\">\r\n          <div className=\"recipe-info\">\r\n            <h3><i className=\"fas fa-info-circle\"></i> Information</h3>\r\n            <hr />\r\n            <p>Cook Time: {!recipe.totalTime ? `Unavailable`: recipe.totalTime + ` minutes`} </p>\r\n            <p>Calories: {Math.round(recipe.calories)}</p>\r\n            <p>Servings: {recipe.yield}</p>\r\n          </div>\r\n          <div className=\"health-facts\">\r\n            <h3><i className=\"fas fa-heart\"></i> Health Facts</h3>\r\n            <hr />\r\n            {\r\n              <ul>\r\n              {recipe.healthLabels.map((label, id) => (\r\n                  <li key={id}>{label}</li>\r\n                ))}\r\n              </ul>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"recipe-div-2\">\r\n          <div className=\"ingredients\">\r\n            <h3><i className=\"fas fa-clipboard-list\"></i> Ingredients</h3>\r\n            <hr />\r\n            {\r\n              <ul>\r\n                {\r\n                  recipe.ingredientLines.map((ingredient, id) => (\r\n                  <li key={id}>{ingredient}</li>\r\n                ))\r\n                }\r\n              </ul>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport Recipe from './Recipe';\r\n\r\nconst RecipeList = props => {\r\n\r\n  return props.recipesList.map((response, id) => {\r\n      \r\n    return <Recipe \r\n      key={id}\r\n      recipe={response.recipe}\r\n    />;\r\n  });\r\n}\r\n\r\n\r\nexport default RecipeList;","import React, { Component } from 'react';\nimport Search from \"./Search\";\nimport CheckBoxes from \"./CheckBoxes\";\nimport RecipeList from \"./RecipeList\";\nimport '../styles/styles.css';\nimport api from \"../utils/api\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      checkboxes: [],\n      ingredient: \"\",\n      error: false\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ ingredient: e.target.value })\n  }\n\n  handleRecipes = () => {\n    const { ingredient } = this.state;\n\n    api.getRecipe(ingredient)\n      .then(res => res.json())\n      .then(data => {\n        const results = data.hits;\n\n        if (!results) {\n          this.setState({\n            error: true\n          })\n\n        } else {\n          this.setState({\n            error: false\n          })\n          results.forEach(item => {\n            this.setState(prevState => ({\n              recipes: [...prevState.recipes, item]\n            }))\n          });\n        }\n      })\n  }\n\n  handleFilteredRecipes = () => {\n    const { ingredient, checkboxes } = this.state;\n\n    api.filteredRecipes(ingredient, checkboxes)\n      .then(res => res.json())\n      .then(data => {\n        const results = data.hits;\n\n        if (!results) {\n          this.setState({\n            error: true\n          })\n\n        } else {\n          this.setState({\n            error: false\n          })\n          results.forEach(item => {\n            this.setState(prevState => ({\n              recipes: [...prevState.recipes, item]\n            }))\n          });\n        }\n\n      })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { checkboxes, ingredient } = this.state;\n\n    if (checkboxes.length) {\n      this.handleFilteredRecipes(ingredient);\n    } else {\n      this.handleRecipes(ingredient);\n    }\n\n    this.setState({\n      recipes: []\n    })\n  }\n\n  isChecked = () => {\n    const checkboxes = document.getElementsByClassName(\"checkboxes\");\n    const filters = [];\n\n    for (let i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].checked === true) {\n        filters.push(checkboxes[i].value);\n      }\n    }\n\n    this.setState({\n      checkboxes: filters\n    })\n  }\n\n  render() {\n    const { error, ingredient, recipes } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"title\">\n            <i className=\"fas fa-utensils\"></i> Find A Recipe <i className=\"fas fa-hamburger\"></i>\n          </h1>\n          <Search\n            change={this.handleChange}\n            value={ingredient}\n            submit={this.handleSubmit}\n          />\n          <div className=\"checkbox-container\">\n            <CheckBoxes\n              click={this.isChecked}\n            />\n          </div>\n        </header>\n        <section>\n          {error &&\n            <p style={{ color: \"red\" }}>Unable to find recipe. Please try again.</p>}\n          <div className=\"recipe-container\">\n            <RecipeList\n              recipesList={recipes}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}